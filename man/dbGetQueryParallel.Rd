% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbGetQueryParallel.R
\name{dbGetQueryParallel}
\alias{dbGetQueryParallel}
\title{A function to pull a large data table from SQL Server to R in parallel chunks
This function relies on the parallel package which uses a fork / exec mechanism.
Therefore, it is important that the parent process not have an initialized JVM if using rJDBC
for database connectivity, as the child processes will see it and attempt to use it.}
\usage{
dbGetQueryParallel(dbConnectionFun, dbConnectionArgs, tableName,
  orderByClause, nThreads = 8)
}
\arguments{
\item{dbConnectionFun}{The function to be called to instantiate a database connection}

\item{dbConnectionArgs}{The values of the parameters (in a named list) to be passed to dbConnectionFun to instantiate a connection}

\item{tableName}{The name of the table to be pulled from the database}

\item{orderByClause}{The ORDER BY clause that will be used to determine the order in which
rows are fetched.  This MUST define a total ordering on the rows of the table, 
or the behavior of the FETCH operation will not be predictable.}

\item{nThreads}{The number of parallel jobs to be used to fetch the table}
}
\description{
A function to pull a large data table from SQL Server to R in parallel chunks
This function relies on the parallel package which uses a fork / exec mechanism.
Therefore, it is important that the parent process not have an initialized JVM if using rJDBC
for database connectivity, as the child processes will see it and attempt to use it.
}
\keyword{sql}
